// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "forge-std/Test.sol";
import "../src/Pari.sol";

contract PariGasTest is Test {
    Pari verifier;

    function setUp() public {
        verifier = new Pari();
    }

    function testGasVerify() public {
        uint256[6] memory proof = [
            21816816024756420791252815595104484133425605923832704747970854496029724928986,
            16118643448663271319711341353342695776808241997942769156881313766814673304595,
            3476013141255608400727546884792844010859281813211217879796927882209136620681,
            21274817454803573156962010167871442859043608896524884468614776992364153961896,
            853694301003001505492655307415451415803452267783448429522660142088639529857,
            1005556678295594216438658730808677588443150168329414353378881276367353224568
        ];
        uint256[32] memory input = [
            1,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099,
 1551776675562637169216064432473661938043001781021906626341009336169144498099
        ];

        verifier.Verify(proof, input);
    }
}



    